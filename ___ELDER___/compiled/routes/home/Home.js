'use strict';

var index = require('../../index-73048756.js');
var components_HookDetail = require('../../components/HookDetail.js');
var components_BlogTeaser = require('../../components/BlogTeaser.js');
require('../../components/Clock.js');

/* src/routes/home/Home.svelte generated by Svelte v3.38.3 */

const css = {
	code: ".banner.svelte-1u3q7ys{padding:1rem 2rem;background:#eee;border-radius:2rem;margin-bottom:1rem}.entries.svelte-1u3q7ys{display:grid;grid-template-columns:1fr;margin:3rem 0}@media(min-width: 768px){.entries.svelte-1u3q7ys{display:grid;grid-template-columns:1fr 1fr 1fr;margin:3rem 0}.entries .entry{margin-right:1rem}}.entry{padding:1rem;border:1px solid #ddd;border-radius:1rem;margin-bottom:1rem;background:white}.about.svelte-1u3q7ys{margin-bottom:2rem}@media(min-width: 768px){.hydrate.svelte-1u3q7ys{display:grid;grid-template-columns:80% 20%}}.hooks.svelte-1u3q7ys{display:grid;grid-template-columns:100%}@media(min-width: 768px){.hooks.svelte-1u3q7ys{grid-template-columns:50% 50%}}",
	map: "{\"version\":3,\"file\":\"Home.svelte\",\"sources\":[\"Home.svelte\"],\"sourcesContent\":[\"<script>\\n  import HookDetail from '../../components/HookDetail.svelte';\\n  import BlogTeaser from '../../components/BlogTeaser.svelte';\\n  import Clock from '../../components/Clock.svelte';\\n  export let data, helpers;\\n\\n  export let foo;\\n\\n  // add permalinks to the hook list so we can link to the posts.\\n  const hooks = data.hookInterface.map((hook) => ({\\n    ...hook,\\n    link: helpers.permalinks.hooks({ slug: hook.hook.toLocaleLowerCase() }),\\n  }));\\n</script>\\n\\n<style>\\n  .banner {\\n    padding: 1rem 2rem;\\n    background: #eee;\\n    border-radius: 2rem;\\n    margin-bottom: 1rem;\\n  }\\n  .entries {\\n    display: grid;\\n    grid-template-columns: 1fr;\\n    margin: 3rem 0;\\n  }\\n\\n  @media (min-width: 768px) {\\n    .entries {\\n      display: grid;\\n      grid-template-columns: 1fr 1fr 1fr;\\n      margin: 3rem 0;\\n    }\\n    :global(.entries .entry) {\\n      margin-right: 1rem;\\n    }\\n  }\\n\\n  :global(.entry) {\\n    padding: 1rem;\\n    border: 1px solid #ddd;\\n    border-radius: 1rem;\\n    margin-bottom: 1rem;\\n    background: white;\\n  }\\n  .about {\\n    margin-bottom: 2rem;\\n  }\\n\\n  @media (min-width: 768px) {\\n    .hydrate {\\n      display: grid;\\n      grid-template-columns: 80% 20%;\\n    }\\n  }\\n\\n  .hooks {\\n    display: grid;\\n    grid-template-columns: 100%;\\n  }\\n\\n  @media (min-width: 768px) {\\n    .hooks {\\n      grid-template-columns: 50% 50%;\\n    }\\n  }\\n</style>\\n\\n<svelte:head>\\n  <title>Elder.js Template: Home</title>\\n  <meta name=\\\"description\\\" content=\\\"Elder.js Starter Template: It's A Tutorial Too!\\\" />\\n  <link href=\\\"/\\\" rel=\\\"canonical\\\" />\\n</svelte:head>\\n\\n{#if data.testingHooks}\\n  <div class=\\\"banner\\\">\\n    <p>Testing hooks worked</p>\\n    {#if data.cpus}\\n      <p>If you use Elder.js to build your site, it will span all {data.cpus.length} cpus listed below:</p>\\n      <ol>\\n        {#each data.cpus as cpu}\\n          <li>{cpu.model}</li>\\n        {/each}\\n      </ol>\\n    {/if}\\n  </div>\\n{/if}\\n\\n<div class=\\\"banner\\\">\\n  <h1>Hello World: Welcome to Elder.js!</h1>\\n  <p>Woot! You've got Elder.js installed. This template is designed to show you the ropes of how things work.</p>\\n\\n  <p>\\n    We've tried to make this site a bit of a tutorial, but be sure to check out the full <a\\n      href=\\\"https://elderguide.com/tech/elderjs/\\\">Elder.js docs.</a>\\n  </p>\\n\\n  <p>\\n    Enjoy playing around with Elder.js and, if you hit a snag with the template, open a <a\\n      href=\\\"https://github.com/Elderjs/template/issues\\\">GitHub issue.</a>\\n  </p>\\n</div>\\n\\n<div class=\\\"blog\\\">\\n  <div class=\\\"entries\\\">\\n    {#each data.markdown.blog as blog}\\n      <BlogTeaser {blog} {helpers} />\\n    {/each}\\n  </div>\\n</div>\\n\\n<div class=\\\"about\\\">\\n  <h2>About This Template</h2>\\n  <p>\\n    This example project is made up of 5 routes; you can find them by looking within the <span class=\\\"code\\\"\\n      >./src/routes/</span> folder. They are:\\n  </p>\\n\\n  <ul>\\n    <li><a href={helpers.permalinks.simple({ slug: 'simple' })}>Simple</a> - A barebones route.</li>\\n    <li>Home - The page you are on.</li>\\n    <li>\\n      Blog - Linked from above, but you can also see a blog post by checking out: <a\\n        href={helpers.permalinks.blog({ slug: 'getting-started' })}>'Getting Started'</a> .\\n    </li>\\n    <li>\\n      Hooks - These are how you customize Elder.js. Details are below, and we've used the <span class=\\\"code\\\"\\n        >hookInterface</span> to build out dedicated pages for each hook as well.\\n    </li>\\n    <li>\\n      An SSR route which only works when Elder.js is in SSR mode. (<span class=\\\"code\\\">npm run dev</span> or\\n      <span class=\\\"code\\\">npm run serve</span>)\\n    </li>\\n  </ul>\\n\\n  <p>\\n    The goal in showing off these 3 routes is to give you enough of an example to see how a site is built with Elder.js\\n    (but one that isn't too complex to overwhelm you).\\n  </p>\\n  <h3>Development Environment:</h3>\\n  <p>\\n    If you ran <span class=\\\"code\\\">npm start</span> to see this page this is the same as\\n    <span class=\\\"code\\\">npm run dev</span> which will:\\n  </p>\\n  <ol>\\n    <li>\\n      Spawn a dev server on the port defined in your <span class=\\\"code\\\">.env</span>. (Pro-tip: add\\n      <span class=\\\"code\\\">.env</span> to your .gitignore now)\\n    </li>\\n    <li>It will reload that dev server when changes are detected including rebundling your Svelte templates.</li>\\n  </ol>\\n\\n  <h3>Other NPM commands</h3>\\n  <ol>\\n    <li>\\n      <code>npm run build</code>: will statically generate this same site so that it can be deployed with a static site\\n      host such as Netlify, Cloudflare Pages, Vercel, or S3.\\n    </li>\\n    <li>\\n      <code>npm run serve</code>: will start the server in production SSR mode which can be used with cluster mode or\\n      PM2 to host Elder.js in a SSR fashion.\\n    </li>\\n  </ol>\\n</div>\\n\\n<div class=\\\"hydrate\\\">\\n  <div class=\\\"left\\\">\\n    <h2>Partial Hydration:</h2>\\n    <p>Svelte.js shines at bringing interactivity to otherwise static websites.</p>\\n    <p>\\n      By default, Elder.js statically renders Svelte components, only mounting them in the browser when it encounters a\\n      Svelte component which includes the\\n      <!-- Note: the actual prop is 'hydrate-client={}' but Svelte doesn't render empty objects-->\\n      <code>hydrate-client={JSON.stringify({})}</code> prop.\\n    </p>\\n    <p>\\n      This means that if a page doesn't need dynamic JS it will have 0KB of JS code resulting in faster loading, lighter\\n      weight websites.\\n    </p>\\n    <p>\\n      The <a href=\\\"https://svelte.dev/examples#clock\\\">clock</a> on this page is an example of a component that has been hydrated\\n      on the client.\\n    </p>\\n    <p>This approach makes it easy to build SEO friendly websites, with Svelte for interactivity when needed.</p>\\n    <p>\\n      By default all hydrated components are lazy loaded with an intersection observer, but you can have full control\\n      over how hydration is handled via <a href=\\\"https://elderguide.com/tech/elderjs/#hydration-options\\\"\\n        >several different hydration options</a\\n      >.\\n    </p>\\n  </div>\\n  <div class=\\\"right\\\">\\n    <div class=\\\"ejs-component\\\" data-ejs-component=\\\"Clock\\\" data-ejs-props={JSON.stringify({})} data-ejs-options={JSON.stringify({\\\"loading\\\":\\\"lazy\\\"})} />\\n  </div>\\n</div>\\n\\n<h2>The Elder.js Hook Interface</h2>\\n\\n<p>\\n  Once you've digested the guides above and understand how to handle client hydration, we encourage you to explore the\\n  hook interface below.\\n</p>\\n<p>\\n  Hooks are the primary way to customize Elder.js and the list below outlines exactly what each hook can be used for.\\n</p>\\n<div />\\n<img\\n  src=\\\"https://elderguide.com/images/elderjs-hook-lifecycle-v13.png\\\"\\n  alt=\\\"Elder.js hook Lifecycle v1.3\\\"\\n  style=\\\"max-width:100%; margin:1rem 0;\\\" />\\n\\n<div class=\\\"hooks\\\">\\n  {#each hooks as hook, i}\\n    <HookDetail {hook} {i} hookEntityDefinitions={data.hookEntityDefinitions} />\\n  {/each}\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAgBE,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAC1B,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAClC,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AACO,eAAe,AAAE,CAAC,AACxB,YAAY,CAAE,IAAI,AACpB,CAAC,AACH,CAAC,AAEO,MAAM,AAAE,CAAC,AACf,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,IAAI,CACnB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,AAChC,CAAC,AACH,CAAC,AAED,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,IAAI,AAC7B,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,eAAC,CAAC,AACN,qBAAqB,CAAE,GAAG,CAAC,GAAG,AAChC,CAAC,AACH,CAAC\"}"
};

const Home = index.create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { data } = $$props, { helpers } = $$props;
	let { foo } = $$props;

	// add permalinks to the hook list so we can link to the posts.
	const hooks = data.hookInterface.map(hook => ({
		...hook,
		link: helpers.permalinks.hooks({ slug: hook.hook.toLocaleLowerCase() })
	}));

	if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
	if ($$props.helpers === void 0 && $$bindings.helpers && helpers !== void 0) $$bindings.helpers(helpers);
	if ($$props.foo === void 0 && $$bindings.foo && foo !== void 0) $$bindings.foo(foo);
	$$result.css.add(css);

	return `${($$result.head += `${($$result.title = `<title>Elder.js Template: Home</title>`, "")}<meta name="${"description"}" content="${"Elder.js Starter Template: It's A Tutorial Too!"}" data-svelte="svelte-fpz8dk"><link href="${"/"}" rel="${"canonical"}" data-svelte="svelte-fpz8dk">`, "")}

${data.testingHooks
	? `<div class="${"banner svelte-1u3q7ys"}"><p>Testing hooks worked</p>
    ${data.cpus
		? `<p>If you use Elder.js to build your site, it will span all ${index.escape(data.cpus.length)} cpus listed below:</p>
      <ol>${index.each(data.cpus, cpu => `<li>${index.escape(cpu.model)}</li>`)}</ol>`
		: ``}</div>`
	: ``}

<div class="${"banner svelte-1u3q7ys"}"><h1>Hello World: Welcome to Elder.js!</h1>
  <p>Woot! You&#39;ve got Elder.js installed. This template is designed to show you the ropes of how things work.</p>

  <p>We&#39;ve tried to make this site a bit of a tutorial, but be sure to check out the full <a href="${"https://elderguide.com/tech/elderjs/"}">Elder.js docs.</a></p>

  <p>Enjoy playing around with Elder.js and, if you hit a snag with the template, open a <a href="${"https://github.com/Elderjs/template/issues"}">GitHub issue.</a></p></div>

<div class="${"blog"}"><div class="${"entries svelte-1u3q7ys"}">${index.each(data.markdown.blog, blog => `${index.validate_component(components_BlogTeaser, "BlogTeaser").$$render($$result, { blog, helpers }, {}, {})}`)}</div></div>

<div class="${"about svelte-1u3q7ys"}"><h2>About This Template</h2>
  <p>This example project is made up of 5 routes; you can find them by looking within the <span class="${"code"}">./src/routes/</span> folder. They are:
  </p>

  <ul><li><a${index.add_attribute("href", helpers.permalinks.simple({ slug: "simple" }), 0)}>Simple</a> - A barebones route.</li>
    <li>Home - The page you are on.</li>
    <li>Blog - Linked from above, but you can also see a blog post by checking out: <a${index.add_attribute("href", helpers.permalinks.blog({ slug: "getting-started" }), 0)}>&#39;Getting Started&#39;</a> .
    </li>
    <li>Hooks - These are how you customize Elder.js. Details are below, and we&#39;ve used the <span class="${"code"}">hookInterface</span> to build out dedicated pages for each hook as well.
    </li>
    <li>An SSR route which only works when Elder.js is in SSR mode. (<span class="${"code"}">npm run dev</span> or
      <span class="${"code"}">npm run serve</span>)
    </li></ul>

  <p>The goal in showing off these 3 routes is to give you enough of an example to see how a site is built with Elder.js
    (but one that isn&#39;t too complex to overwhelm you).
  </p>
  <h3>Development Environment:</h3>
  <p>If you ran <span class="${"code"}">npm start</span> to see this page this is the same as
    <span class="${"code"}">npm run dev</span> which will:
  </p>
  <ol><li>Spawn a dev server on the port defined in your <span class="${"code"}">.env</span>. (Pro-tip: add
      <span class="${"code"}">.env</span> to your .gitignore now)
    </li>
    <li>It will reload that dev server when changes are detected including rebundling your Svelte templates.</li></ol>

  <h3>Other NPM commands</h3>
  <ol><li><code>npm run build</code>: will statically generate this same site so that it can be deployed with a static site
      host such as Netlify, Cloudflare Pages, Vercel, or S3.
    </li>
    <li><code>npm run serve</code>: will start the server in production SSR mode which can be used with cluster mode or
      PM2 to host Elder.js in a SSR fashion.
    </li></ol></div>

<div class="${"hydrate svelte-1u3q7ys"}"><div class="${"left"}"><h2>Partial Hydration:</h2>
    <p>Svelte.js shines at bringing interactivity to otherwise static websites.</p>
    <p>By default, Elder.js statically renders Svelte components, only mounting them in the browser when it encounters a
      Svelte component which includes the
      
      <code>hydrate-client=${index.escape(JSON.stringify({}))}</code> prop.
    </p>
    <p>This means that if a page doesn&#39;t need dynamic JS it will have 0KB of JS code resulting in faster loading, lighter
      weight websites.
    </p>
    <p>The <a href="${"https://svelte.dev/examples#clock"}">clock</a> on this page is an example of a component that has been hydrated
      on the client.
    </p>
    <p>This approach makes it easy to build SEO friendly websites, with Svelte for interactivity when needed.</p>
    <p>By default all hydrated components are lazy loaded with an intersection observer, but you can have full control
      over how hydration is handled via <a href="${"https://elderguide.com/tech/elderjs/#hydration-options"}">several different hydration options</a>.
    </p></div>
  <div class="${"right"}"><div class="${"ejs-component"}" data-ejs-component="${"Clock"}"${index.add_attribute("data-ejs-props", JSON.stringify({}), 0)}${index.add_attribute("data-ejs-options", JSON.stringify({ "loading": "lazy" }), 0)}></div></div></div>

<h2>The Elder.js Hook Interface</h2>

<p>Once you&#39;ve digested the guides above and understand how to handle client hydration, we encourage you to explore the
  hook interface below.
</p>
<p>Hooks are the primary way to customize Elder.js and the list below outlines exactly what each hook can be used for.
</p>
<div></div>
<img src="${"https://elderguide.com/images/elderjs-hook-lifecycle-v13.png"}" alt="${"Elder.js hook Lifecycle v1.3"}" style="${"max-width:100%; margin:1rem 0;"}">

<div class="${"hooks svelte-1u3q7ys"}">${index.each(hooks, (hook, i) => `${index.validate_component(components_HookDetail, "HookDetail").$$render(
		$$result,
		{
			hook,
			i,
			hookEntityDefinitions: data.hookEntityDefinitions
		},
		{},
		{}
	)}`)}</div>`;
});

module.exports = Home;
module.exports._css = ".banner.svelte-1u3q7ys{padding:1rem 2rem;background:#eee;border-radius:2rem;margin-bottom:1rem}.entries.svelte-1u3q7ys{display:grid;grid-template-columns:1fr;margin:3rem 0}@media(min-width: 768px){.entries.svelte-1u3q7ys{display:grid;grid-template-columns:1fr 1fr 1fr;margin:3rem 0}.entries .entry{margin-right:1rem}}.entry{padding:1rem;border:1px solid #ddd;border-radius:1rem;margin-bottom:1rem;background:white}.about.svelte-1u3q7ys{margin-bottom:2rem}@media(min-width: 768px){.hydrate.svelte-1u3q7ys{display:grid;grid-template-columns:80% 20%}}.hooks.svelte-1u3q7ys{display:grid;grid-template-columns:100%}@media(min-width: 768px){.hooks.svelte-1u3q7ys{grid-template-columns:50% 50%}}.list.svelte-azdmmt.svelte-azdmmt{display:block;margin-bottom:0.5rem;font-size:13px}.list.svelte-azdmmt .code.svelte-azdmmt{cursor:help}.hook.svelte-azdmmt.svelte-azdmmt{max-width:100%;text-overflow:wrap;padding:1rem;border:1px solid #ddd;border-collapse:collapse;margin-bottom:1rem;border-radius:1rem;position:relative;background:white}.hook-number.svelte-azdmmt.svelte-azdmmt{position:absolute;top:0;right:0px;width:2rem;height:1.75rem;border-top-right-radius:1rem;border-bottom-left-radius:1rem;text-align:center;padding-top:3px;background:#ddd;font-size:14px}.overview.svelte-azdmmt.svelte-azdmmt{margin-right:1rem}@media(min-width: 768px){.hook.svelte-azdmmt.svelte-azdmmt:nth-child(even){margin-left:0.5rem}.hook.svelte-azdmmt.svelte-azdmmt:nth-child(odd){margin-right:0.5rem}}.use.svelte-azdmmt.svelte-azdmmt{font-size:14px}.use ul{padding-left:1rem}.overview.svelte-azdmmt.svelte-azdmmt{margin-bottom:0.75rem;padding-bottom:0.75rem;border-bottom:1px solid #ddd}svg.svelte-mzoozd{width:100%;height:100%;margin-top:2rem}.clock-face.svelte-mzoozd{stroke:#333;fill:white}.minor.svelte-mzoozd{stroke:#999;stroke-width:0.5}.major.svelte-mzoozd{stroke:#333;stroke-width:1}.hour.svelte-mzoozd{stroke:#333}.minute.svelte-mzoozd{stroke:#666}.second.svelte-mzoozd,.second-counterweight.svelte-mzoozd{stroke:rgb(180, 0, 0)}.second-counterweight.svelte-mzoozd{stroke-width:3}";
module.exports._cssMap = "\u002F*# sourceMappingURL=data:application\u002Fjson;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yb3V0ZXMvaG9tZS9Ib21lLnN2ZWx0ZSIsIi4uL3NyYy9jb21wb25lbnRzL0hvb2tEZXRhaWwuc3ZlbHRlIiwiLi4vc3JjL2NvbXBvbmVudHMvQ2xvY2suc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdCUyx1QkFBRSxRQUNFLEtBQUssS0FDZCxXQUFZLEtBQ1osY0FBZSxLQUNmLGNBQWUsS0FFVCx3QkFBRSxRQUNDLEtBQ1Qsc0JBQXVCLElBQ3ZCLE9BQVEsS0FBSyxFQUdTLHlCQUNkLHdCQUFFLFFBQ0MsS0FDVCxzQkFBdUIsSUFBSSxJQUFJLElBQy9CLE9BQVEsS0FBSyxFQUNkLGdCQUN5QixhQUNWLE1BRWpCLE9BRWdCLFFBQ04sS0FDVCxPQUFRLElBQUksTUFBTSxLQUNsQixjQUFlLEtBQ2YsY0FBZSxLQUNmLFdBQVksTUFFUixzQkFBRSxjQUNTLEtBR08seUJBQ2Qsd0JBQUUsUUFDQyxLQUNULHNCQUF1QixJQUFJLEtBSXpCLHNCQUFFLFFBQ0csS0FDVCxzQkFBdUIsS0FHRCx5QkFDaEIsc0JBQUUsc0JBQ2lCLElBQUksS0N6RDFCLGtDQUFFLFFBQ0ksTUFDVCxjQUFlLE9BQ2YsVUFBVyxLQUdGLHdDQUFFLE9BQ0gsS0FHTCxrQ0FBRSxVQUNNLEtBQ1gsY0FBZSxLQUNmLFFBQVMsS0FDVCxPQUFRLElBQUksTUFBTSxLQUNsQixnQkFBaUIsU0FDakIsY0FBZSxLQUNmLGNBQWUsS0FDZixTQUFVLFNBQ1YsV0FBWSxNQUdGLHlDQUFFLFNBQ0YsU0FDVixJQUFLLEVBQ0wsTUFBTyxJQUNQLE1BQU8sS0FDUCxPQUFRLFFBQ1Isd0JBQXlCLEtBQ3pCLDBCQUEyQixLQUMzQixXQUFZLE9BQ1osWUFBYSxJQUNiLFdBQVksS0FDWixVQUFXLEtBR0osc0NBQUUsYUFDSyxLQUdRLHlCQUNGLGtEQUFHLFlBQ1IsT0FFSSxpREFBRyxhQUNOLFFBSWQsaUNBQUUsVUFDTyxLQUNaLFFBQ2lCLGFBQ0YsS0FHUCxzQ0FBRSxjQUNNLFFBQ2YsZUFBZ0IsUUFDaEIsY0FBZSxJQUFJLE1BQU0sS0MzQ3hCLGtCQUFFLE1BQ0ksS0FDUCxPQUFRLEtBQ1IsV0FBWSxLQUdILDBCQUFFLE9BQ0gsS0FDUixLQUFNLE1BR0YscUJBQUUsT0FDRSxLQUNSLGFBQWMsSUFHVixxQkFBRSxPQUNFLEtBQ1IsYUFBYyxFQUdYLG9CQUFFLE9BQ0csS0FHSCxzQkFBRSxPQUNDLEtBQ1Qsc0JBR29CLG9DQUFFLE9BQ0EsZUFHRixvQ0FBRSxhQUNQIiwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbiAgaW1wb3J0IEhvb2tEZXRhaWwgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Ib29rRGV0YWlsLnN2ZWx0ZSc7XG4gIGltcG9ydCBCbG9nVGVhc2VyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmxvZ1RlYXNlci5zdmVsdGUnO1xuICBpbXBvcnQgQ2xvY2sgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9DbG9jay5zdmVsdGUnO1xuICBleHBvcnQgbGV0IGRhdGEsIGhlbHBlcnM7XG5cbiAgZXhwb3J0IGxldCBmb287XG5cbiAgLy8gYWRkIHBlcm1hbGlua3MgdG8gdGhlIGhvb2sgbGlzdCBzbyB3ZSBjYW4gbGluayB0byB0aGUgcG9zdHMuXG4gIGNvbnN0IGhvb2tzID0gZGF0YS5ob29rSW50ZXJmYWNlLm1hcCgoaG9vaykgPT4gKHtcbiAgICAuLi5ob29rLFxuICAgIGxpbms6IGhlbHBlcnMucGVybWFsaW5rcy5ob29rcyh7IHNsdWc6IGhvb2suaG9vay50b0xvY2FsZUxvd2VyQ2FzZSgpIH0pLFxuICB9KSk7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAuYmFubmVyIHtcbiAgICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gICAgYmFja2dyb3VuZDogI2VlZTtcbiAgICBib3JkZXItcmFkaXVzOiAycmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIH1cbiAgLmVudHJpZXMge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgbWFyZ2luOiAzcmVtIDA7XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuZW50cmllcyB7XG4gICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICAgIG1hcmdpbjogM3JlbSAwO1xuICAgIH1cbiAgICA6Z2xvYmFsKC5lbnRyaWVzIC5lbnRyeSkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICAgIH1cbiAgfVxuXG4gIDpnbG9iYWwoLmVudHJ5KSB7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgfVxuICAuYWJvdXQge1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuaHlkcmF0ZSB7XG4gICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA4MCUgMjAlO1xuICAgIH1cbiAgfVxuXG4gIC5ob29rcyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDEwMCU7XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuaG9va3Mge1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1MCUgNTAlO1xuICAgIH1cbiAgfVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuICA8dGl0bGU+RWxkZXIuanMgVGVtcGxhdGU6IEhvbWU8L3RpdGxlPlxuICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PVwiRWxkZXIuanMgU3RhcnRlciBUZW1wbGF0ZTogSXQncyBBIFR1dG9yaWFsIFRvbyFcIiAvPlxuICA8bGluayBocmVmPVwiL1wiIHJlbD1cImNhbm9uaWNhbFwiIC8+XG48L3N2ZWx0ZTpoZWFkPlxuXG57I2lmIGRhdGEudGVzdGluZ0hvb2tzfVxuICA8ZGl2IGNsYXNzPVwiYmFubmVyXCI+XG4gICAgPHA+VGVzdGluZyBob29rcyB3b3JrZWQ8L3A+XG4gICAgeyNpZiBkYXRhLmNwdXN9XG4gICAgICA8cD5JZiB5b3UgdXNlIEVsZGVyLmpzIHRvIGJ1aWxkIHlvdXIgc2l0ZSwgaXQgd2lsbCBzcGFuIGFsbCB7ZGF0YS5jcHVzLmxlbmd0aH0gY3B1cyBsaXN0ZWQgYmVsb3c6PC9wPlxuICAgICAgPG9sPlxuICAgICAgICB7I2VhY2ggZGF0YS5jcHVzIGFzIGNwdX1cbiAgICAgICAgICA8bGk+e2NwdS5tb2RlbH08L2xpPlxuICAgICAgICB7L2VhY2h9XG4gICAgICA8L29sPlxuICAgIHsvaWZ9XG4gIDwvZGl2Plxuey9pZn1cblxuPGRpdiBjbGFzcz1cImJhbm5lclwiPlxuICA8aDE+SGVsbG8gV29ybGQ6IFdlbGNvbWUgdG8gRWxkZXIuanMhPC9oMT5cbiAgPHA+V29vdCEgWW91J3ZlIGdvdCBFbGRlci5qcyBpbnN0YWxsZWQuIFRoaXMgdGVtcGxhdGUgaXMgZGVzaWduZWQgdG8gc2hvdyB5b3UgdGhlIHJvcGVzIG9mIGhvdyB0aGluZ3Mgd29yay48L3A+XG5cbiAgPHA+XG4gICAgV2UndmUgdHJpZWQgdG8gbWFrZSB0aGlzIHNpdGUgYSBiaXQgb2YgYSB0dXRvcmlhbCwgYnV0IGJlIHN1cmUgdG8gY2hlY2sgb3V0IHRoZSBmdWxsIDxhXG4gICAgICBocmVmPVwiaHR0cHM6Ly9lbGRlcmd1aWRlLmNvbS90ZWNoL2VsZGVyanMvXCI+RWxkZXIuanMgZG9jcy48L2E+XG4gIDwvcD5cblxuICA8cD5cbiAgICBFbmpveSBwbGF5aW5nIGFyb3VuZCB3aXRoIEVsZGVyLmpzIGFuZCwgaWYgeW91IGhpdCBhIHNuYWcgd2l0aCB0aGUgdGVtcGxhdGUsIG9wZW4gYSA8YVxuICAgICAgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9FbGRlcmpzL3RlbXBsYXRlL2lzc3Vlc1wiPkdpdEh1YiBpc3N1ZS48L2E+XG4gIDwvcD5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwiYmxvZ1wiPlxuICA8ZGl2IGNsYXNzPVwiZW50cmllc1wiPlxuICAgIHsjZWFjaCBkYXRhLm1hcmtkb3duLmJsb2cgYXMgYmxvZ31cbiAgICAgIDxCbG9nVGVhc2VyIHtibG9nfSB7aGVscGVyc30gLz5cbiAgICB7L2VhY2h9XG4gIDwvZGl2PlxuPC9kaXY+XG5cbjxkaXYgY2xhc3M9XCJhYm91dFwiPlxuICA8aDI+QWJvdXQgVGhpcyBUZW1wbGF0ZTwvaDI+XG4gIDxwPlxuICAgIFRoaXMgZXhhbXBsZSBwcm9qZWN0IGlzIG1hZGUgdXAgb2YgNSByb3V0ZXM7IHlvdSBjYW4gZmluZCB0aGVtIGJ5IGxvb2tpbmcgd2l0aGluIHRoZSA8c3BhbiBjbGFzcz1cImNvZGVcIlxuICAgICAgPi4vc3JjL3JvdXRlcy88L3NwYW4+IGZvbGRlci4gVGhleSBhcmU6XG4gIDwvcD5cblxuICA8dWw+XG4gICAgPGxpPjxhIGhyZWY9e2hlbHBlcnMucGVybWFsaW5rcy5zaW1wbGUoeyBzbHVnOiAnc2ltcGxlJyB9KX0+U2ltcGxlPC9hPiAtIEEgYmFyZWJvbmVzIHJvdXRlLjwvbGk+XG4gICAgPGxpPkhvbWUgLSBUaGUgcGFnZSB5b3UgYXJlIG9uLjwvbGk+XG4gICAgPGxpPlxuICAgICAgQmxvZyAtIExpbmtlZCBmcm9tIGFib3ZlLCBidXQgeW91IGNhbiBhbHNvIHNlZSBhIGJsb2cgcG9zdCBieSBjaGVja2luZyBvdXQ6IDxhXG4gICAgICAgIGhyZWY9e2hlbHBlcnMucGVybWFsaW5rcy5ibG9nKHsgc2x1ZzogJ2dldHRpbmctc3RhcnRlZCcgfSl9PidHZXR0aW5nIFN0YXJ0ZWQnPC9hPiAuXG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICBIb29rcyAtIFRoZXNlIGFyZSBob3cgeW91IGN1c3RvbWl6ZSBFbGRlci5qcy4gRGV0YWlscyBhcmUgYmVsb3csIGFuZCB3ZSd2ZSB1c2VkIHRoZSA8c3BhbiBjbGFzcz1cImNvZGVcIlxuICAgICAgICA+aG9va0ludGVyZmFjZTwvc3Bhbj4gdG8gYnVpbGQgb3V0IGRlZGljYXRlZCBwYWdlcyBmb3IgZWFjaCBob29rIGFzIHdlbGwuXG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICBBbiBTU1Igcm91dGUgd2hpY2ggb25seSB3b3JrcyB3aGVuIEVsZGVyLmpzIGlzIGluIFNTUiBtb2RlLiAoPHNwYW4gY2xhc3M9XCJjb2RlXCI+bnBtIHJ1biBkZXY8L3NwYW4+IG9yXG4gICAgICA8c3BhbiBjbGFzcz1cImNvZGVcIj5ucG0gcnVuIHNlcnZlPC9zcGFuPilcbiAgICA8L2xpPlxuICA8L3VsPlxuXG4gIDxwPlxuICAgIFRoZSBnb2FsIGluIHNob3dpbmcgb2ZmIHRoZXNlIDMgcm91dGVzIGlzIHRvIGdpdmUgeW91IGVub3VnaCBvZiBhbiBleGFtcGxlIHRvIHNlZSBob3cgYSBzaXRlIGlzIGJ1aWx0IHdpdGggRWxkZXIuanNcbiAgICAoYnV0IG9uZSB0aGF0IGlzbid0IHRvbyBjb21wbGV4IHRvIG92ZXJ3aGVsbSB5b3UpLlxuICA8L3A+XG4gIDxoMz5EZXZlbG9wbWVudCBFbnZpcm9ubWVudDo8L2gzPlxuICA8cD5cbiAgICBJZiB5b3UgcmFuIDxzcGFuIGNsYXNzPVwiY29kZVwiPm5wbSBzdGFydDwvc3Bhbj4gdG8gc2VlIHRoaXMgcGFnZSB0aGlzIGlzIHRoZSBzYW1lIGFzXG4gICAgPHNwYW4gY2xhc3M9XCJjb2RlXCI+bnBtIHJ1biBkZXY8L3NwYW4+IHdoaWNoIHdpbGw6XG4gIDwvcD5cbiAgPG9sPlxuICAgIDxsaT5cbiAgICAgIFNwYXduIGEgZGV2IHNlcnZlciBvbiB0aGUgcG9ydCBkZWZpbmVkIGluIHlvdXIgPHNwYW4gY2xhc3M9XCJjb2RlXCI+LmVudjwvc3Bhbj4uIChQcm8tdGlwOiBhZGRcbiAgICAgIDxzcGFuIGNsYXNzPVwiY29kZVwiPi5lbnY8L3NwYW4+IHRvIHlvdXIgLmdpdGlnbm9yZSBub3cpXG4gICAgPC9saT5cbiAgICA8bGk+SXQgd2lsbCByZWxvYWQgdGhhdCBkZXYgc2VydmVyIHdoZW4gY2hhbmdlcyBhcmUgZGV0ZWN0ZWQgaW5jbHVkaW5nIHJlYnVuZGxpbmcgeW91ciBTdmVsdGUgdGVtcGxhdGVzLjwvbGk+XG4gIDwvb2w+XG5cbiAgPGgzPk90aGVyIE5QTSBjb21tYW5kczwvaDM+XG4gIDxvbD5cbiAgICA8bGk+XG4gICAgICA8Y29kZT5ucG0gcnVuIGJ1aWxkPC9jb2RlPjogd2lsbCBzdGF0aWNhbGx5IGdlbmVyYXRlIHRoaXMgc2FtZSBzaXRlIHNvIHRoYXQgaXQgY2FuIGJlIGRlcGxveWVkIHdpdGggYSBzdGF0aWMgc2l0ZVxuICAgICAgaG9zdCBzdWNoIGFzIE5ldGxpZnksIENsb3VkZmxhcmUgUGFnZXMsIFZlcmNlbCwgb3IgUzMuXG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICA8Y29kZT5ucG0gcnVuIHNlcnZlPC9jb2RlPjogd2lsbCBzdGFydCB0aGUgc2VydmVyIGluIHByb2R1Y3Rpb24gU1NSIG1vZGUgd2hpY2ggY2FuIGJlIHVzZWQgd2l0aCBjbHVzdGVyIG1vZGUgb3JcbiAgICAgIFBNMiB0byBob3N0IEVsZGVyLmpzIGluIGEgU1NSIGZhc2hpb24uXG4gICAgPC9saT5cbiAgPC9vbD5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwiaHlkcmF0ZVwiPlxuICA8ZGl2IGNsYXNzPVwibGVmdFwiPlxuICAgIDxoMj5QYXJ0aWFsIEh5ZHJhdGlvbjo8L2gyPlxuICAgIDxwPlN2ZWx0ZS5qcyBzaGluZXMgYXQgYnJpbmdpbmcgaW50ZXJhY3Rpdml0eSB0byBvdGhlcndpc2Ugc3RhdGljIHdlYnNpdGVzLjwvcD5cbiAgICA8cD5cbiAgICAgIEJ5IGRlZmF1bHQsIEVsZGVyLmpzIHN0YXRpY2FsbHkgcmVuZGVycyBTdmVsdGUgY29tcG9uZW50cywgb25seSBtb3VudGluZyB0aGVtIGluIHRoZSBicm93c2VyIHdoZW4gaXQgZW5jb3VudGVycyBhXG4gICAgICBTdmVsdGUgY29tcG9uZW50IHdoaWNoIGluY2x1ZGVzIHRoZVxuICAgICAgPCEtLSBOb3RlOiB0aGUgYWN0dWFsIHByb3AgaXMgJ2h5ZHJhdGUtY2xpZW50PXt9JyBidXQgU3ZlbHRlIGRvZXNuJ3QgcmVuZGVyIGVtcHR5IG9iamVjdHMtLT5cbiAgICAgIDxjb2RlPmh5ZHJhdGUtY2xpZW50PXtKU09OLnN0cmluZ2lmeSh7fSl9PC9jb2RlPiBwcm9wLlxuICAgIDwvcD5cbiAgICA8cD5cbiAgICAgIFRoaXMgbWVhbnMgdGhhdCBpZiBhIHBhZ2UgZG9lc24ndCBuZWVkIGR5bmFtaWMgSlMgaXQgd2lsbCBoYXZlIDBLQiBvZiBKUyBjb2RlIHJlc3VsdGluZyBpbiBmYXN0ZXIgbG9hZGluZywgbGlnaHRlclxuICAgICAgd2VpZ2h0IHdlYnNpdGVzLlxuICAgIDwvcD5cbiAgICA8cD5cbiAgICAgIFRoZSA8YSBocmVmPVwiaHR0cHM6Ly9zdmVsdGUuZGV2L2V4YW1wbGVzI2Nsb2NrXCI+Y2xvY2s8L2E+IG9uIHRoaXMgcGFnZSBpcyBhbiBleGFtcGxlIG9mIGEgY29tcG9uZW50IHRoYXQgaGFzIGJlZW4gaHlkcmF0ZWRcbiAgICAgIG9uIHRoZSBjbGllbnQuXG4gICAgPC9wPlxuICAgIDxwPlRoaXMgYXBwcm9hY2ggbWFrZXMgaXQgZWFzeSB0byBidWlsZCBTRU8gZnJpZW5kbHkgd2Vic2l0ZXMsIHdpdGggU3ZlbHRlIGZvciBpbnRlcmFjdGl2aXR5IHdoZW4gbmVlZGVkLjwvcD5cbiAgICA8cD5cbiAgICAgIEJ5IGRlZmF1bHQgYWxsIGh5ZHJhdGVkIGNvbXBvbmVudHMgYXJlIGxhenkgbG9hZGVkIHdpdGggYW4gaW50ZXJzZWN0aW9uIG9ic2VydmVyLCBidXQgeW91IGNhbiBoYXZlIGZ1bGwgY29udHJvbFxuICAgICAgb3ZlciBob3cgaHlkcmF0aW9uIGlzIGhhbmRsZWQgdmlhIDxhIGhyZWY9XCJodHRwczovL2VsZGVyZ3VpZGUuY29tL3RlY2gvZWxkZXJqcy8jaHlkcmF0aW9uLW9wdGlvbnNcIlxuICAgICAgICA+c2V2ZXJhbCBkaWZmZXJlbnQgaHlkcmF0aW9uIG9wdGlvbnM8L2FcbiAgICAgID4uXG4gICAgPC9wPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+XG4gICAgPGRpdiBjbGFzcz1cImVqcy1jb21wb25lbnRcIiBkYXRhLWVqcy1jb21wb25lbnQ9XCJDbG9ja1wiIGRhdGEtZWpzLXByb3BzPXtKU09OLnN0cmluZ2lmeSh7fSl9IGRhdGEtZWpzLW9wdGlvbnM9e0pTT04uc3RyaW5naWZ5KHtcImxvYWRpbmdcIjpcImxhenlcIn0pfSAvPlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48aDI+VGhlIEVsZGVyLmpzIEhvb2sgSW50ZXJmYWNlPC9oMj5cblxuPHA+XG4gIE9uY2UgeW91J3ZlIGRpZ2VzdGVkIHRoZSBndWlkZXMgYWJvdmUgYW5kIHVuZGVyc3RhbmQgaG93IHRvIGhhbmRsZSBjbGllbnQgaHlkcmF0aW9uLCB3ZSBlbmNvdXJhZ2UgeW91IHRvIGV4cGxvcmUgdGhlXG4gIGhvb2sgaW50ZXJmYWNlIGJlbG93LlxuPC9wPlxuPHA+XG4gIEhvb2tzIGFyZSB0aGUgcHJpbWFyeSB3YXkgdG8gY3VzdG9taXplIEVsZGVyLmpzIGFuZCB0aGUgbGlzdCBiZWxvdyBvdXRsaW5lcyBleGFjdGx5IHdoYXQgZWFjaCBob29rIGNhbiBiZSB1c2VkIGZvci5cbjwvcD5cbjxkaXYgLz5cbjxpbWdcbiAgc3JjPVwiaHR0cHM6Ly9lbGRlcmd1aWRlLmNvbS9pbWFnZXMvZWxkZXJqcy1ob29rLWxpZmVjeWNsZS12MTMucG5nXCJcbiAgYWx0PVwiRWxkZXIuanMgaG9vayBMaWZlY3ljbGUgdjEuM1wiXG4gIHN0eWxlPVwibWF4LXdpZHRoOjEwMCU7IG1hcmdpbjoxcmVtIDA7XCIgLz5cblxuPGRpdiBjbGFzcz1cImhvb2tzXCI+XG4gIHsjZWFjaCBob29rcyBhcyBob29rLCBpfVxuICAgIDxIb29rRGV0YWlsIHtob29rfSB7aX0gaG9va0VudGl0eURlZmluaXRpb25zPXtkYXRhLmhvb2tFbnRpdHlEZWZpbml0aW9uc30gLz5cbiAgey9lYWNofVxuPC9kaXY+XG4iLCI8c2NyaXB0PlxuICBleHBvcnQgbGV0IGhvb2s7XG4gIGV4cG9ydCBsZXQgaTtcbiAgZXhwb3J0IGxldCBob29rRW50aXR5RGVmaW5pdGlvbnM7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAubGlzdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgfVxuXG4gIC5saXN0IC5jb2RlIHtcbiAgICBjdXJzb3I6IGhlbHA7XG4gIH1cblxuICAuaG9vayB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHRleHQtb3ZlcmZsb3c6IHdyYXA7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgfVxuXG4gIC5ob29rLW51bWJlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMHB4O1xuICAgIHdpZHRoOiAycmVtO1xuICAgIGhlaWdodDogMS43NXJlbTtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMXJlbTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxcmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogM3B4O1xuICAgIGJhY2tncm91bmQ6ICNkZGQ7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG5cbiAgLm92ZXJ2aWV3IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuaG9vazpudGgtY2hpbGQoZXZlbikge1xuICAgICAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcbiAgICB9XG4gICAgLmhvb2s6bnRoLWNoaWxkKG9kZCkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gICAgfVxuICB9XG5cbiAgLnVzZSB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG4gIDpnbG9iYWwoLnVzZSB1bCkge1xuICAgIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgfVxuXG4gIC5vdmVydmlldyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC43NXJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMC43NXJlbTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgfVxuPC9zdHlsZT5cblxuPGRpdiBjbGFzcz1cImhvb2tcIj5cbiAgeyNpZiBpIHx8IGkgPT09IDB9PHNwYW4gY2xhc3M9XCJob29rLW51bWJlclwiPntpICsgMX0uPC9zcGFuPnsvaWZ9XG5cbiAgPGRpdiBjbGFzcz1cIm92ZXJ2aWV3XCI+XG4gICAgPHNwYW4gY2xhc3M9XCJob29rLW5hbWVcIj5cbiAgICAgIHsjaWYgaG9vay5saW5rICYmIGhvb2subGluay5sZW5ndGggPiAwfTxhIGhyZWY9e2hvb2subGlua30+e2hvb2suaG9va308L2E+ezplbHNlfXtob29rLmhvb2t9ey9pZn1cbiAgICA8L3NwYW4+XG4gICAgOiB7aG9vay5jb250ZXh0fVxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cInVzZVwiPlxuICAgIHtAaHRtbCBob29rLnVzZX1cbiAgPC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cImxpc3RcIj5cbiAgICA8c3Ryb25nPlByb3BzPC9zdHJvbmc+IDogeyNlYWNoIGhvb2sucHJvcHMgYXMgcHJvcH1cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2RlXCIgZGF0YS1iYWxsb29uLWxlbmd0aD1cIm1lZGl1bVwiIGRhdGEtYmFsbG9vbi1wb3M9XCJ1cFwiIGFyaWEtbGFiZWw9e2hvb2tFbnRpdHlEZWZpbml0aW9uc1twcm9wXX0+XG4gICAgICAgIHtwcm9wfVxuICAgICAgPC9kaXY+XG4gICAgey9lYWNofVxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImxpc3RcIj5cbiAgICA8c3Ryb25nPk11dGFibGU8L3N0cm9uZz4gOiB7I2VhY2ggaG9vay5tdXRhYmxlIGFzIG11dGFibGV9XG4gICAgICA8ZGl2IGNsYXNzPVwiY29kZVwiIGRhdGEtYmFsbG9vbi1sZW5ndGg9XCJtZWRpdW1cIiBkYXRhLWJhbGxvb24tcG9zPVwidXBcIiBhcmlhLWxhYmVsPXtob29rRW50aXR5RGVmaW5pdGlvbnNbbXV0YWJsZV19PlxuICAgICAgICB7bXV0YWJsZX1cbiAgICAgIDwvZGl2PlxuICAgIHsvZWFjaH1cbiAgPC9kaXY+XG5cbiAgeyNpZiBob29rLmFkdmFuY2VkfVxuICAgIDxkaXY+PHNtYWxsPlRoaXMgaG9vayBpcyBhbiAnYWR2YW5jZWQnIGhvb2sgbWVhbmluZyBpdCBnZWFyZWQgdG93YXJkcyBhZHZhbmNlZCB1c2VycyBvciBwbHVnaW5zLjwvc21hbGw+PC9kaXY+XG4gIHsvaWZ9XG5cbiAgPHNtYWxsPntob29rLmV4cGlyZW1lbnRhbCA\u002FICdFeHBpcmVtZW50YWwnIDogJ1N0YWJsZSd9ICZtaWRkb3Q7IExvY2F0aW9uOiB7aG9vay5sb2NhdGlvbn08L3NtYWxsPlxuPC9kaXY+XG4iLCI8c2NyaXB0PlxuICBpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJztcblxuICBsZXQgdGltZSA9IG5ldyBEYXRlKCk7XG5cbiAgLy8gdGhlc2UgYXV0b21hdGljYWxseSB1cGRhdGUgd2hlbiBgdGltZWBcbiAgLy8gY2hhbmdlcywgYmVjYXVzZSBvZiB0aGUgYCQ6YCBwcmVmaXhcbiAgJDogaG91cnMgPSB0aW1lLmdldEhvdXJzKCk7XG4gICQ6IG1pbnV0ZXMgPSB0aW1lLmdldE1pbnV0ZXMoKTtcbiAgJDogc2Vjb25kcyA9IHRpbWUuZ2V0U2Vjb25kcygpO1xuXG4gIG9uTW91bnQoKCkgPT4ge1xuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgdGltZSA9IG5ldyBEYXRlKCk7XG4gICAgfSwgMTAwMCk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgfTtcbiAgfSk7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICBzdmcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xuICB9XG5cbiAgLmNsb2NrLWZhY2Uge1xuICAgIHN0cm9rZTogIzMzMztcbiAgICBmaWxsOiB3aGl0ZTtcbiAgfVxuXG4gIC5taW5vciB7XG4gICAgc3Ryb2tlOiAjOTk5O1xuICAgIHN0cm9rZS13aWR0aDogMC41O1xuICB9XG5cbiAgLm1ham9yIHtcbiAgICBzdHJva2U6ICMzMzM7XG4gICAgc3Ryb2tlLXdpZHRoOiAxO1xuICB9XG5cbiAgLmhvdXIge1xuICAgIHN0cm9rZTogIzMzMztcbiAgfVxuXG4gIC5taW51dGUge1xuICAgIHN0cm9rZTogIzY2NjtcbiAgfVxuXG4gIC5zZWNvbmQsXG4gIC5zZWNvbmQtY291bnRlcndlaWdodCB7XG4gICAgc3Ryb2tlOiByZ2IoMTgwLCAwLCAwKTtcbiAgfVxuXG4gIC5zZWNvbmQtY291bnRlcndlaWdodCB7XG4gICAgc3Ryb2tlLXdpZHRoOiAzO1xuICB9XG48L3N0eWxlPlxuXG48c3ZnIHZpZXdCb3g9XCItNTAgLTUwIDEwMCAxMDBcIj5cbiAgPGNpcmNsZSBjbGFzcz1cImNsb2NrLWZhY2VcIiByPVwiNDhcIiAvPlxuXG4gIDwhLS0gbWFya2VycyAtLT5cbiAgeyNlYWNoIFswLCA1LCAxMCwgMTUsIDIwLCAyNSwgMzAsIDM1LCA0MCwgNDUsIDUwLCA1NV0gYXMgbWludXRlfVxuICAgIDxsaW5lIGNsYXNzPVwibWFqb3JcIiB5MT1cIjM1XCIgeTI9XCI0NVwiIHRyYW5zZm9ybT1cInJvdGF0ZSh7MzAgKiBtaW51dGV9KVwiIC8+XG5cbiAgICB7I2VhY2ggWzEsIDIsIDMsIDRdIGFzIG9mZnNldH1cbiAgICAgIDxsaW5lIGNsYXNzPVwibWlub3JcIiB5MT1cIjQyXCIgeTI9XCI0NVwiIHRyYW5zZm9ybT1cInJvdGF0ZSh7NiAqIChtaW51dGUgKyBvZmZzZXQpfSlcIiAvPlxuICAgIHsvZWFjaH1cbiAgey9lYWNofVxuXG4gIDwhLS0gaG91ciBoYW5kIC0tPlxuICA8bGluZSBjbGFzcz1cImhvdXJcIiB5MT1cIjJcIiB5Mj1cIi0yMFwiIHRyYW5zZm9ybT1cInJvdGF0ZSh7MzAgKiBob3VycyArIG1pbnV0ZXMgLyAyfSlcIiAvPlxuXG4gIDwhLS0gbWludXRlIGhhbmQgLS0+XG4gIDxsaW5lIGNsYXNzPVwibWludXRlXCIgeTE9XCI0XCIgeTI9XCItMzBcIiB0cmFuc2Zvcm09XCJyb3RhdGUoezYgKiBtaW51dGVzICsgc2Vjb25kcyAvIDEwfSlcIiAvPlxuXG4gIDwhLS0gc2Vjb25kIGhhbmQgLS0+XG4gIDxnIHRyYW5zZm9ybT1cInJvdGF0ZSh7NiAqIHNlY29uZHN9KVwiPlxuICAgIDxsaW5lIGNsYXNzPVwic2Vjb25kXCIgeTE9XCIxMFwiIHkyPVwiLTM4XCIgLz5cbiAgICA8bGluZSBjbGFzcz1cInNlY29uZC1jb3VudGVyd2VpZ2h0XCIgeTE9XCIxMFwiIHkyPVwiMlwiIC8+XG4gIDwvZz5cbjwvc3ZnPlxuIl19 *\u002F";
module.exports._cssIncluded = ["src/routes/home/Home.svelte","src/components/HookDetail.svelte","src/components/BlogTeaser.svelte","src/components/Clock.svelte"]
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
